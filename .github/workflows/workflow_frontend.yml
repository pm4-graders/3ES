name: Frontend Workflow

on:
  push:
    branches:
      - main
    paths: 'frontend/**'
  workflow_dispatch:
jobs:
  testing:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run lint
  build:
    needs: testing
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
    - name: Checkout main
      uses: actions/checkout@main

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Build container image
      run: docker build -t ${{ secrets.REGISTRY_NAME }}/frontend:$(echo $GITHUB_SHA | head -c7) . |
           docker build -t ${{ secrets.REGISTRY_NAME }}/frontend:latest .

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 1200

    - name: Push image to DigitalOcean Container Registry
      run: docker push ${{ secrets.REGISTRY_NAME }}/frontend:$(echo $GITHUB_SHA | head -c7) |
           docker push ${{ secrets.REGISTRY_NAME }}/frontend:latest

    - name: Update deployment file
      run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}/frontend:'${TAG}'|' $GITHUB_WORKSPACE/frontend/kubernetes/deployment.yml

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}
    
    # If you haven't already integrated with your registry and only want workloads in a particular namespace to be able to pull 
    # from your registry, uncomment the next two commands.
    #- name: Upload credentials of your registry to your DigitalOcean Kubernetes cluster
    #  run: doctl registry kubernetes-manifest | kubectl apply -f -
      
    #- name: Reference the secret you just uploaded as an imagePullSecrets
    #  run: "kubectl patch serviceaccount default -p '{\"imagePullSecrets\": [{\"name\": \"registry-<your-registry-name>`\"}]}'"

    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f $GITHUB_WORKSPACE/frontend/kubernetes/deployment.yml

    - name: Verify deployment
      run: kubectl rollout status deployment/frontend
